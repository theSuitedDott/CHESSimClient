<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:StockChessCS"
                    xmlns:enums="clr-namespace:StockChessCS.Enums"
                    xmlns:convs="clr-namespace:StockChessCS.Converters"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">    
    <Style x:Key="PieceStyle" TargetType="Image">
        <Style.Triggers>
            <!-- White Pieces -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.King}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.White}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/WhiteKing.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.Queen}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.White}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/WhiteQueen.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.Bishop}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.White}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/WhiteBishop.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.Knight}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.White}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/WhiteKnight.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.Rook}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.White}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/WhiteRook.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.Pawn}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.White}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/WhitePawn.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <!-- Black Pieces -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.King}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.Black}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/BlackKing.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.Queen}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.Black}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/BlackQueen.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.Bishop}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.Black}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/BlackBishop.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.Knight}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.Black}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/BlackKnight.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.Rook}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.Black}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/BlackRook.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ItemType}" Value="{x:Static Member=enums:ChessBoardItem.Piece}"/>
                    <Condition Binding="{Binding Piece}" Value="{x:Static Member=enums:PieceType.Pawn}"/>
                    <Condition Binding="{Binding Color}" Value="{x:Static Member=enums:PieceColor.Black}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/Pieces/BlackPawn.png"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>            
        </Style.Triggers>
    </Style>

    <convs:FileColumnConverter x:Key="FileColumnConverter"/>
    <convs:RankRowConverter x:Key="RankRowConverter"/>

    <Style x:Key="BoardItemContainerStyle" TargetType="ListBoxItem">
        <Setter Property="Grid.Row" Value="{Binding Rank, Converter={StaticResource RankRowConverter}, Mode=OneWay}"/>
        <Setter Property="Grid.Column" Value="{Binding File, Converter={StaticResource FileColumnConverter}, Mode=OneWay}"/>
        <Setter Property="Padding" Value="5"/>      

        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsEngineThinking, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"
                         Value="True">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>            
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Padding" Value="3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.Checkmate, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="BoardTemplate">
        <Image Name="PieceImg" Style="{StaticResource PieceStyle}" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <RotateTransform Angle="0"/>
            </Image.RenderTransform>
        </Image>
    </DataTemplate>
    <DataTemplate x:Key="FlippedBoardTemplate">
        <Image Style="{StaticResource PieceStyle}" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <RotateTransform Angle="180"/>
            </Image.RenderTransform>
        </Image>
    </DataTemplate>

    <DrawingBrush x:Key="LightWoodBoardBrush" Viewport="0,0,100,100" ViewportUnits="Absolute" TileMode="Tile" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality">
                <GeometryDrawing>
                    <GeometryDrawing.Brush>
                        <ImageBrush ImageSource="Images/Textures/Texture_2.jpg" Stretch="Fill"/>
                    </GeometryDrawing.Brush>
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,100,100"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing>
                    <GeometryDrawing.Brush>
                        <ImageBrush ImageSource="Images/Textures/Texture_1.jpg" Stretch="Fill"/>
                    </GeometryDrawing.Brush>
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="50,0,50,50"/>
                            <RectangleGeometry Rect="0,50,50,50"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <ItemsPanelTemplate x:Key="BoardPanelTemplate">
        <!-- Width is 400 since each square is 50 in the DrawingBrush – eight squares in each row and column -->
        <Grid Width="400" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}"
              Background="{StaticResource LightWoodBoardBrush}">
            <Grid.RowDefinitions>
                <RowDefinition/> <RowDefinition/> <RowDefinition/> <RowDefinition/>
                <RowDefinition/> <RowDefinition/> <RowDefinition/> <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/> <ColumnDefinition/> <ColumnDefinition/> <ColumnDefinition/>
                <ColumnDefinition/> <ColumnDefinition/> <ColumnDefinition/> <ColumnDefinition/>
            </Grid.ColumnDefinitions>
        </Grid>
    </ItemsPanelTemplate>

    <Style x:Key="IconBorderStyle" TargetType="Border">
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="BorderBrush" Value="#CC8D8D8D"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="ProgressBarStyle" TargetType="{x:Type controls:MetroProgressBar}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEngineThinking, Mode=OneWay}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEngineThinking, Mode=OneWay}" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CheckmateTxtStyle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding CheckMate, Mode=OneWay}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CheckMate, Mode=OneWay}" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
